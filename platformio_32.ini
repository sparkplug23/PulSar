
[platformio]

; *** Tasmota build variant selection
default_envs =  ${build_envs.default_envs}
                ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; HOME installed
              
                ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Tester Devices Running
                ; esp_32_rgbfireplace_tester
                ; esp_32_sdlogger1_tester



; [core32]
; platform                = espressif32
; ;@2.0.0
; platform_packages       = tool-esptoolpy@1.20800.0
;                           platformio/framework-arduinoespressif32 @ 3.10004.201016

[core32]
platform                    = espressif32 @ 3.0.0
platform_packages           = framework-arduinoespressif32 @ https://github.com/Jason2866/arduino-esp32/releases/download/1.0.5-rc6/esp32-1.0.5-rc6.zip
                              platformio/tool-mklittlefs @ ~1.203.200522


[common32]
platform                = ${core32.platform}
platform_packages       = ${core32.platform_packages}
board                   = esp32dev
board_build.ldscript    = esp32_out.ld
board_build.partitions  = esp32_partition_app1984k_spiffs64k.csv
board_build.flash_mode  = ${common.board_build.flash_mode}
board_build.f_flash     = ${common.board_build.f_flash}
board_build.f_cpu       = ${common.board_build.f_cpu}
build_unflags           = ${esp_defaults.build_unflags}
                          -Wpointer-arith
monitor_speed           = ${common.monitor_speed}
upload_port             = ${common.upload_port}
upload_resetmethod      = ${common.upload_resetmethod}
upload_speed            = 921600
extra_scripts           = ${common.extra_scripts}

build_flags             = ${esp_defaults.build_flags}

    ; -D CORE_DEBUG_LEVEL=0
    ; -D BUFFER_LENGTH=128
    ; -D MQTT_MAX_PACKET_SIZE=1200
    ; -D uint32=uint32_t
    ; -D uint16=uint16_t
    ; -D uint8=uint8_t
    ; -D sint8_t=int8_t
    ; -D sint32_t=int32_t
    ; -D sint16_t=int16_t
    ; -D memcpy_P=memcpy
	;   -D memcmp_P=memcmp

lib_ldf_mode            = chain+  
shared_libdeps_dir      = lib
; *** Library disable / enable for variant Tasmota. Disable reduces compile time
; *** !!! Disabling needed libs will generate compile errors !!!
; *** The resulting firmware will NOT be different if you leave all libs enabled
; *** Disabling by putting a ";" in front of the lib name
; *** If you dont know what it is all about, do not change
lib_extra_dirs            = 
; *** ESP32 lib. ALWAYS needed for ESP32 !!!
                            lib/libesp32
; *** ESP32 lib. ALWAYS needed for ESP32 !!!
                            ; lib/libg_neopixel   
; *** Only disabled for Tasmota minimal and Tasmota light. For all other variants needed!
                            lib/lib_basic
; ; **** I2C devices. Most sensors. Disable only if you dont have ANY I2C device enabled
;                             lib/lib_i2c
                            lib/libesp32/network
                            lib/lib_network
; ; *** Displays. Disable if you dont have any Display activated
;                             lib/lib_display
; ; *** Bear SSL and base64. Disable if you dont have SSL or TLS activated
;                             lib/lib_ssl
; ; *** Audio needs a lot of time to compile. Mostly not used functions. Recommended to disable
;                             lib/lib_audio
; ; *** RF 433 stuff (not RF Bridge). Recommended to disable
;                             lib/lib_rf
; *** Mostly not used functions. Recommended to disable
                           ;; lib/lib_div


[esp32_defaults]
build_unflags               = ${esp_defaults.build_unflags}
                              -Wswitch-unreachable
                              -Wstringop-overflow
                              -Wincompatible-pointer-types
                              -Wnonnull-compare
                              -fexceptions
                              -fno-lto
                              -Wpointer-arith
build_flags                 = ${esp_defaults.build_flags}
                            ;   -DBUFFER_LENGTH=128
                            ;   -DHTTP_UPLOAD_BUFLEN=2048
                            ;   -DMQTT_MAX_PACKET_SIZE=1200
                            ;   -Duint32=uint32_t
                            ;   -Duint16=uint16_t
                            ;   -Duint8=uint8_t
                            ;   -Dsint8_t=int8_t
                            ;   -Dsint32_t=int32_t
                            ;   -Dsint16_t=int16_t
                            ;   -Dmemcpy_P=memcpy
                            ;   -Dmemcmp_P=memcmp
                            ;   for TLS we can afford compiling for 4K RSA keys
                            ;   -DUSE_4K_RSA


; [core32]
; platform                    = espressif32 @ 3.2.0
; platform_packages           = platformio/tool-mklittlefs @ ~1.203.200522
; build_unflags               = ${esp32_defaults.build_unflags}
; build_flags                 = ${esp32_defaults.build_flags}



[core32solo1]
platform                    = https://github.com/tasmota/platform-espressif32/releases/download/v.2.0.3/platform-espressif32-solo1-v.2.0.3.zip
platform_packages           =
build_unflags               = ${esp32_defaults.build_unflags}
build_flags                  = ${esp32_defaults.build_flags}


