[env]
platform = ${common.platform}
platform_packages = ${common.platform_packages}
framework = ${common.framework}
board = ${common.board}
board_build.ldscript  = ${common.board_build.ldscript}
board_build.flash_mode = ${common.board_build.flash_mode}
board_build.f_flash = ${common.board_build.f_flash}
board_build.f_cpu = ${common.board_build.f_cpu}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags}
                                -D USER_MICHAEL
monitor_speed = ${common.monitor_speed}
upload_port = ${common.upload_port}
upload_resetmethod = ${common.upload_resetmethod}
upload_speed = ${common.upload_speed}
extra_scripts = ${common.extra_scripts}
lib_extra_dirs = ${common.lib_extra_dirs}
; lib_deps = ${common.lib_deps}

; ; my devices

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Custom Test Users ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Custom Test Users ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Custom Test Users ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Custom Test Users ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Custom Test Users ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


[env:esp_8266_customuser_example_serial]
platform                  = ${core_2_6_1.platform}
build_flags               = ${core_2_6_1.build_flags}
                                 -D ENABLE_TESTUSER -w
upload_protocol = espota
extra_scripts             = gzip_fw.py
upload_port = 192.168.1.148



[env:esp_8266_customuser_example_ota]
platform                  = ${core_2_6_1.platform}
build_flags               = ${core_2_6_1.build_flags}
                                 -D ENABLE_TESTUSER -w
upload_protocol = espota
extra_scripts             = gzip_fw.py
                            pio/override_copy.py
upload_port = 192.168.1.148

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Tester devices ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Tester devices ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Tester devices ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Tester devices ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Tester devices ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Tester devices ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Tester devices ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Tester devices ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Tester devices ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Tester devices ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


[env:tb_4chpro]
extends = env:whitehall_82
build_flags               = ${core_2_6_1_1m.build_flags} -w
                              -D DEVICE_TESTBED_PRODUCTION__SONOFF_4CHPRO
                              -D DISABLE_WEBSERVER
lib_extra_dirs              = ${library.lib_extra_dirs}
                              lib/lib_rf
; board = esp01_1m
;upload_speed = 57600
upload_port = 192.168.0.145
upload_protocol = espota
extra_scripts   = gzip_fw.py
;upload_port = COM18


[env:tb_neopixel_pinned]
extends = env:whitehall_32
build_unflags               = ${esp32_defaults.build_unflags}
build_flags                 = ${esp32_defaults.build_flags}
                                    -D DEVICE_TESTBED_ESP32_OPTIMISED_NEOPIXEL
                                    -D D_USER_MICHAEL
                                    -w                                     
lib_extra_dirs = ${common.lib_extra_dirs}
              lib/libesp32
              lib/lib_basic
              lib/lib_network
              lib/lib_neopixel_legacy_2022
monitor_filters = esp32_exception_decoder
build_type = debug
upload_port = COM6
; upload_port = 192.168.0.87
; upload_port = bedroomsensor
; upload_protocol = espota


[env:tb_oled_sh1106]
extends = env:whitehall_32
build_unflags               = ${esp32_defaults.build_unflags}
build_flags                 = ${esp32_defaults.build_flags}
                                    -D DEVICE_TESTBED_OLED_SH1106
                                    -D D_USER_MICHAEL
                                    -w                                     
lib_extra_dirs = ${common.lib_extra_dirs}
              lib/libesp32
              lib/lib_basic
              lib/lib_network
              lib/lib_display
; monitor_filters = esp32_exception_decoder
; build_type = debug
; upload_port = COM6
; upload_port = 192.168.0.87
upload_port = testbed_oled_sh1106.local
upload_protocol = espota


[env:tb_lilygo_sim7000]
extends = env:whitehall_32
build_unflags               = ${esp32_defaults.build_unflags}
build_flags                 = ${esp32_defaults.build_flags}
                                    -D DEVICE_TESTBED_LILYGO_SIM7000G
                                    -D D_USER_MICHAEL
                                    -w                                     
lib_extra_dirs = ${common.lib_extra_dirs}
              lib/libesp32
              lib/lib_basic
              lib/lib_network
; monitor_filters = esp32_exception_decoder
; build_type = debug
; upload_port = COM8
upload_port = 192.168.0.127
; upload_port = bedroomsensor
upload_protocol = espota

[env:tb_sim7000_oled]
extends = env:whitehall_32
build_unflags               = ${esp32_defaults.build_unflags}
build_flags                 = ${esp32_defaults.build_flags}
                                    -D DEVICE_TESTBED_LILYGO_SIM7000G_WITH_OLED
                                    -D D_USER_MICHAEL
                                    -w                                     
lib_extra_dirs = ${common.lib_extra_dirs}
              lib/libesp32
              lib/lib_basic
              lib/lib_network
              lib/lib_display
; monitor_filters = esp32_exception_decoder
; build_type = debug
; upload_port = COM8
upload_port = 192.168.0.127
; upload_port = bedroomsensor
upload_protocol = espota





[env:esp_8266_testbed_shelly1_01]
platform                  = ${core_2_6_1.platform}
build_flags               = ${core_2_6_1.build_flags}
                                 -DENABLE_TESTUSER -D DEVICE_TESTBED_SHELLY1_01 -w
upload_protocol = espota
extra_scripts             = gzip_fw.py
upload_port = 192.168.0.170
; upload_port = COM18


[env:esp_8266_testbed_shelly2_dimmer_01]
platform                  = ${core_2_6_1.platform}
build_flags               = ${core_2_6_1.build_flags}
                                 -D ENABLE_TESTUSER -D DEVICE_TESTBED_SHELLY2_DIMMER -w
; upload_protocol = espota
extra_scripts             = gzip_fw.py
; upload_port = 192.168.1.177
upload_port = COM18


[env:tb_shelly25]
platform                  = ${core_2_6_1.platform}
build_flags               = ${core_2_6_1.build_flags}
                                 -D ENABLE_TESTUSER -D DEVICE_TESTBED_SHELLY2P5_01 -w
upload_protocol = espota
extra_scripts             = gzip_fw.py
upload_port = testbed_shelly25_01.local
; upload_port = 192.168.0.111
; monitor_filters = esp8266_exception_decoder
; build_type = debug
; upload_port = COM18



[env:esp_8266_hvac_bedroom]
build_flags = ${common.build_flags} -D DEVICE_HVAC_BEDROOM -w 
                                    -D D_USER_MICHAEL
lib_extra_dirs = ${common.lib_extra_dirs}
              lib/lib_sensor
; upload_port = heating
; upload_port = COM5
upload_protocol = espota
extra_scripts             = gzip_fw.py
; ; upload_port = hvac_bedroom
upload_port = 192.168.1.173
; monitor_filters = esp8266_exception_decoder
; build_type = debug
; upload_port = COM3



[env:esp_8266_h801_tester]
platform                  = ${core_2_6_1.platform}
build_flags               = ${core_2_6_1.build_flags}
                                 -D DEVICE_H801_TESTER -w
; upload_port=COM19
upload_protocol = espota
extra_scripts             = gzip_fw.py
upload_port = h801_tester.local
; upload_port = 192.168.1.190



[env:esp_8266_desklight]
platform                  = ${core_2_6_1_1m.platform}
build_flags               = ${core_2_6_1_1m.build_flags}
                                 -D DEVICE_DESKLIGHT -w
upload_port=COM3
; monitor_filters = esp8266_exception_decoder
; build_type = debug
; board = esp01_1m

; upload_port = 192.168.1.227


[env:esp_8266_rgbbedlight]
platform                  = ${core_2_6_1.platform}
build_flags               = ${core_2_6_1.build_flags}
                                 -D DEVICE_RGBBEDLIGHT -w
                -D D_USER_MICHAEL
upload_protocol = espota
extra_scripts             = gzip_fw.py
; upload_port = rgbbedlight
upload_port = 192.168.1.156
; upload_port=COM18


[env:esp_8266_h801_sunlight]
platform                  = ${core_2_6_1.platform}
build_flags               = ${core_2_6_1.build_flags}
                                 -D DEVICE_H801_SUNLIGHT -w
                -D D_USER_MICHAEL
upload_protocol = espota
extra_scripts             = gzip_fw.py
upload_port = h801_sunlight
; upload_port = 192.168.1.152
; upload_port=COM18


[env:esp_8266_rgbbedroomfloor]
platform                  = ${core_2_6_1.platform}
build_flags               = ${core_2_6_1.build_flags}
                                 -D DEVICE_RGBBEDROOMFLOOR -w
                -D D_USER_MICHAEL
upload_protocol = espota
extra_scripts             = gzip_fw.py
; upload_port = rgbbedroomfloor
upload_port = 192.168.1.123










[env:esp_32_testbed_hvac_with_energy_sens]
extends = env:tasmota32_base
build_unflags               = ${esp32_defaults.build_unflags}
build_flags                 = ${esp32_defaults.build_flags}
                                    -D DEVICE_TESTBED_HVAC_HEAT_ONLY_WITH_ENERGY_SENSOR
                                    -w                                     
lib_extra_dirs          = ${common32.lib_extra_dirs}
                            lib/libesp32/network
                            lib/lib_network
                            lib/lib_energy
; monitor_filters = esp32_exception_decoder
; build_type = debug
; upload_port = COM17
upload_port = 192.168.0.41
upload_protocol = espota

